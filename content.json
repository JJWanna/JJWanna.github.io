[{"title":"javascript函数式编程","date":"2017-03-28T07:52:35.000Z","path":"2017/03/28/javascript函数式编程/","text":"函数式编程思维 函数式编程常用核心概念 当下函数式编程最热的库 函数式编程基础理论 函数式编程（Functional Programming）相对计算机历史而言是一个古老的概念，甚至早于第一台计算机的诞生。函数式编程的基础模型来源于 ℷ (lambda x=x&gt;x2)演算， 而 ℷ 演算并非设计于在计算机上执行，*它是一套用于研究函数定义、函数应用和递归的形式系统。 函数式编程不是用函数来编程，也不是传统的面向过程编程。是将复杂的函数符合成简单的函数（计算理论、递归论、ℷ 演算）。运算过程尽量写成一系列嵌套的函数调用。 javascript是披着 C 外衣的lisp。 真正的火热是随着React的高阶函数而逐步升温。 函数：函数是一等公民，指的是函数与其他数据类型一样，处于平等地位，可以赋值给其他变量，也可以作为参数，传入另一个函数，或者作为别的函数的返回值。 不可变量：在函数编程中，我们通常理解的变量在函数式编程中也被函数代替了。在函数编程中变量仅仅代表某个表达式。这里所说的’变量’是不能被修改的。 所有的变量只能被赋值一次初值。 map &amp; reduce 他们是最常用的函数式编程的方法。 专业术语 纯函数 函数的柯里化 函数组合 Point Free 声明式与命令式代码 惰性求值 纯函数：对于相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用，也不依赖外部环境的状态。 var arr=[1,2,3,4,5]; // Array.slice是纯函数，因为它没有副作用，对于固定的输入，输出总是固定的 xs.slice(0,3); xs.slice(0,3); xs.slice(0,3); xs.slice(0,3);","tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"我的博客之es6","date":"2017-03-27T05:44:54.000Z","path":"2017/03/27/我的博客之es6/","text":"","tags":[]},{"title":"pageabout","date":"2017-03-27T05:27:00.000Z","path":"2017/03/27/pageabout/","text":"","tags":[]},{"title":"娇娇博客","date":"2017-03-27T05:22:38.000Z","path":"2017/03/27/娇娇博客/","text":"不好不好不好不好生活是需要自己慢慢体会领悟你得好坏无需别人评价走好人生的路，这是一本没有排练的戏 整理日志 发布日志 平台呵护 说明书 高亮一段代码[^code]1@=retue er","tags":[]},{"title":"Hello World","date":"2017-03-25T10:15:34.000Z","path":"2017/03/25/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]